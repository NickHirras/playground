# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "notify_about_prs_after_noon"
  notify_about_prs_after_noon:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write  # Grant permission to comment on PRs
      contents: read        # Allow read access to the repo content
    steps:
      - name: set current env.DAY (Mon, Tue, ...) and env.HOUR (0..23) in eastern timezone
        shell: bash
        run: echo "DAY=$(TZ=":America/New_York" date +'%a')" >> $GITHUB_ENV && echo "HOUR=$(TZ=":America/New_York" date +'%H')" >> $GITHUB_ENV

      - name: Checkout PR
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get the first file in the commit
        id: get_first_file
        run: |
          # Get the latest commit SHA
          COMMIT_SHA=$(git rev-parse HEAD)
          
          # Check if there are any files in the commit
          FIRST_FILE=$(git diff --name-only HEAD^ HEAD | head -n 1)
          
          if [ -z "$FIRST_FILE" ]; then
            echo "No files found in the latest commit."
            echo "first_file=" >> $GITHUB_ENV
            echo "commit_id=" >> $GITHUB_ENV
          else
            echo "First file: $FIRST_FILE"
            echo "first_file=$FIRST_FILE" >> $GITHUB_ENV
            echo "commit_id=$COMMIT_SHA" >> $GITHUB_ENV
          fi

      - name: Add Review Comment
        if: env.first_file != ''
        run: |
          FILE_NAME="${{ env.first_file }}"
          COMMIT_ID="${{ env.commit_id }}"
          PR_NUMBER="${{ github.event.pull_request.number }}"
          COMMENT="This is an automated comment for the file: ${FILE_NAME} from commit: ${COMMIT_ID}"

          curl -s -X POST "${GITHUB_API_URL}/repos/${{ github.repository }}/pulls/${PR_NUMBER}/comments" \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          -d "{\"body\": \"${COMMENT}\", \"path\": \"${FILE_NAME}\", \"commit_id\": \"${COMMIT_ID}\", \"subject_type\": \"file\"}"
      
      # - name: adding after-hours review comment
      #   uses: nbaztec/add-pr-review-comment@v1
      #   if: env.HOUR > 12
      #   with:
      #     comments: |
      #       [{"path":"../README.md","subject_type":"file","body":"After hours commit!","side":"RIGHT"}]
      #     repo-token: ${{ secrets.GITHUB_TOKEN }}
      #     repo-token-user-login: 'github-actions[bot]' # The user.login for temporary GitHub tokens
      #     allow-repeats: false # This is the default
      # - name: adding after-hours comment for visibility
      #   uses: mshick/add-pr-comment@v2
      #   if: env.HOUR > 12
      #   with:
      #     refresh-message-position: true
      #     message: |
      #       **⚠ After Hours PR**
      #       This PR was created in the afternoon.
            
      #       @NickHirras please review this!
      # - name: adding in-hours comment just for demonstration, wouldn't need this
      #   uses: mshick/add-pr-comment@v2
      #   if: env.HOUR <= 12
      #   with:
      #     refresh-message-position: true
      #     message: |
      #       **☕Hello**
      #       This PR was created in the morning.
